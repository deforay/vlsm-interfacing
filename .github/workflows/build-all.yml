name: Build All Platforms

on:
  push:
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: Linux x64
            build-command: npx electron-builder --linux deb --x64 --publish never
            artifact-name: linux-x64
            artifact-path: release/*.deb
          - os: windows-latest
            name: Windows x64
            build-command: npx electron-builder --win portable nsis --x64 --publish never
            artifact-name: windows-x64
            artifact-path: release/*.exe

    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.name }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Rebuild native deps
        run: npm run postinstall

      - name: Build application
        run: npm run build:prod

      - name: Build ${{ matrix.name }} package
        run: ${{ matrix.build-command }}

      # Upload first so a later cosmetic step can't block publishing
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}
          if-no-files-found: error
          retention-days: 7

      # Cross-platform listing (wonâ€™t fail the job)
      - name: List build artifacts
        if: always()
        shell: bash
        run: |
          echo "Runner OS: ${{ runner.os }}"
          if [ -d release ]; then
            ls -la release || true
          else
            echo "No release/ dir found"
          fi

  release:
    name: Create GitHub Release with all assets
    needs: build
    # run even if one matrix leg failed; still require tag
    if: startsWith(github.ref, 'refs/tags/v') && always()
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - id: dl-linux
        uses: actions/download-artifact@v4
        with:
          name: linux-x64
          path: dist/linux
        continue-on-error: true

      - id: dl-win
        uses: actions/download-artifact@v4
        with:
          name: windows-x64
          path: dist/windows
        continue-on-error: true

      - name: Show downloaded files
        run: |
          echo "Linux:" && ls -lh dist/linux || true
          echo "Windows:" && ls -lh dist/windows || true

      - name: Publish release
        # only publish if at least one download succeeded
        if: steps.dl-linux.outcome == 'success' || steps.dl-win.outcome == 'success'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/linux/*
            dist/windows/*
          generate_release_notes: true
          fail_on_unmatched_files: true
